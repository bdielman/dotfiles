# Setup path for function autoloading
fpath=($HOME/.zsh/func $fpath)
typeset -U fpath

# Set custom prompt
setopt PROMPT_SUBST
autoload -U promptinit
promptinit

# Initialize completion
autoload -Uz compinit && compinit -i

# if type brew &>/dev/null
# then
#   FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

#   autoload -Uz compinit
#   compinit
# fi

# Initialize colors
autoload -U colors
colors

# Completion settings
setopt auto_menu
setopt complete_in_word
setopt always_to_end
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors ''

# Nicer history
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE
setopt append_history
setopt extended_history
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history

# Use Vim as the editor
export EDITOR="vim"

# By default, zsh considers many characters part of a word (e.g., _ and -).
# Narrow that down to allow easier skipping through words via M-f and M-b.
export WORDCHARS='*?[]~&;!$%^<>'

# Highlight search results in ack.
export ACK_COLOR_MATCH='green'

# Customize prompt
source $HOME/.dotfiles/git/git_prompt

ZSH_THEME_GIT_PROMPT_PREFIX=""
ZSH_THEME_GIT_PROMPT_SUFFIX=""
ZSH_THEME_GIT_PROMPT_DIRTY=" !"
ZSH_THEME_GIT_PROMPT_BEHIND_REMOTE=" -"
ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE=" +"
ZSH_THEME_GIT_PROMPT_DIVERGED_REMOTE=" ±"
ZSH_THEME_GIT_PROMPT_STASHED=" $"
ZSH_THEME_GIT_PROMPT_UNTRACKED="?"
local good_bad="%(?, %{$fg_bold[magenta]%}❯%{$reset_color%}, %{$fg_bold[red]%}❯%{$reset_color%})"

NEWLINE=$'\n'
PROMPT='${NEWLINE}%{$fg_bold[cyan]%}%~%{$reset_color%} %{$fg_bold[red]%}[$(rbenv version-name)]%{$reset_color%} %{$fg_bold[green]%}[$(nodenv version-name)]%{$reset_color%}${good_bad} '
RPROMPT='%{$fg_bold[yellow]%}$(git_prompt_info)$(git_prompt_status)$(git_remote_status)%{$reset_color%}'

# Setup Homebrew
eval $(/opt/homebrew/bin/brew shellenv)

# Setup rbenv
# http://mattgreensmith.net/2014/12/25/speed-up-rbenv-init-via-background-rehashing/
# passing the rehash arg, and backgrounding the standard rehash speeds shell
# load time significantly!
# eval "$(rbenv init --no-rehash -)"
# (rbenv rehash &) 2> /dev/null
eval "$(rbenv init - zsh)"

# Setup nodenv
eval "$(nodenv init -)"
# eval "$(nodenv init - --no-rehash)"
# (nodenv rehash &) 2> /dev/null

# Link up Postgres
export PATH="/opt/homebrew/opt/postgresql@12/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/postgresql@12/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@12/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@12/lib/pkgconfig"

# Setup pyenv
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init --path)"

# eval "$(pyenv init -)"

# eval "$(pyenv init - --no-rehash)"
# (pyenv rehash &) 2> /dev/null
# export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# and install pyenv-virtualenv

# eval "$(pyenv virtualenv-init -)"

# https://openradar.appspot.com/27348363
# This is a fix for macOS Sierra
# -A flag adds all identities stored in keychain
ssh-add --apple-use-keychain ~/.ssh/id_ed25519 2> /dev/null
ssh-add --apple-use-keychain ~/.ssh/id_ed25519_heroku 2> /dev/null

# Source functions and aliases
source ~/.dotfiles/zsh/aliases

# Setup ENV variables for Python/virtualenv
# export PIP_REQUIRE_VIRTUALENV=true
