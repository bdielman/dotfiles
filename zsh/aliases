# Directory Stuff
alias ..="cd .."
alias cdd="cd -"
alias ...="cd ../.."
alias ls="ls -lG"
alias ll="ls -alh"
alias lsa="ls -lGa"

# Concatenate and print content of files (add line numbers)
alias catn="cat -n"

# Copy my public key to my clipboard
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

# Verify build and push to repo
alias verifypush="be bin/verify-build && git push"


# MySQL
alias sqlstart="mysql.server start"
alias sqlstop="mysql.server stop"

# Rails
alias sc="bundle exec rails c"
alias bails="bundle exec rails s"
alias be="bundle exec"

# Shortcuts
alias dt="cd ~/Desktop"
alias www="cd ~/Sites"
alias dot="cd ~/.dotfiles"

# Serve static
alias sstatic="python -m SimpleHTTPServer"

# Overmind shortcut
alias overdev="overmind start -f Procfile.dev"

# Postgres
# alias pgstart="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
# alias pgstop="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log stop"
alias pgstart="pg_ctl -D /usr/local/var/postgres start"
alias pgstop="pg_ctl -D /usr/local/var/postgres stop"

# Apache
alias apachestart="sudo apachectl start"
alias apachestop="sudo apachectl stop"
alias apacherestart="sudo apachectl -k restart"
alias apachelog="tail -f /usr/local/var/log/httpd/error_log"

# Bump up open file limit
alias ulimfix="ulimit -n 1200"

# Functions
add-host() {
  echo $* | sudo tee -a /etc/hosts
}

# Show last comit in directory
# https://stackoverflow.com/a/17361406/456337
gw() {
  for f in $(git ls-tree --name-only HEAD .); do
    format="%C(green)%cr%C(reset)}%C(cyan)%h%C(reset)}%s}%C(yellow)%cn%C(reset)}"
    str="$(git log --color -1 --pretty=format:"$format" -- "$f")"
    printf "$f}$str\n"
  done | column -s '}' -t
}

# Heroku scripts
download_db() {
  heroku pg:backups:capture --app $1;
  heroku pg:backups:download --app $1;
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U $3 -d $2 latest.dump;
  rm latest.dump;
}

# NOTE: download_db sundays-production sundays_development brandenwiegand
function better_download_db() {
  # heroku pg:backups:capture --app $1;
  # heroku pg:backups:download --app $1;

  echo "Drop local DBs"
  rails db:drop

  echo "Create local DBs"
  rails db:create

  echo "Load schema (i.e. create tables without data)"
  rails db:schema:load

  table_allow_list=$(psql -X -t -c "SELECT STRING_AGG('-t ' || table_name, ' ') FROM information_schema.tables WHERE table_schema = 'public' AND table_name NOT ILIKE '%ahoy%';" $2)

  echo "Restore data"
  pg_restore ${=table_allow_list} --schema=public --disable-triggers --data-only --verbose --no-acl --no-owner -h localhost -U $3 -d $2 latest.dump;
}

update_db() {
  heroku pg:backups:capture --app $1;
}

restore_pg() {
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U $2 -d $1 latest.dump;
  rm latest.dump;
}
