" BASIC SETTINGS
" ------------------------

" Remove compatibility with vi
set nocompatible

" Add minpac and vim packages
source ~/.dotfiles/vim/packages.vim

" Filetype settings
filetype on
filetype plugin on
filetype indent on

" Turn on syntax highlighting and set background color
syntax on

" Remap leader
let mapleader = ","

" Fix issues mistyping :w and :q
command! W :w
command! Q :q
command! WQ :wq
command! Wq :wq

" For mistyping noh constantly
command! Noh :noh

" Shortcuts to make file navigation easier
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>ew :e %%
map <leader>es :sp %%
map <leader>ev :vsp %%
map <leader>et :tabe %%

" Keep buffers around after closing
set hidden

" Don't update the display while executing macros
set lazyredraw

" Show incomplete cmds down the bottom
set showcmd

" Prevent mode from displaying
set noshowmode

" Add line numbers
set number

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" Set GUI options and add cursorline for MacVim
if has("gui_running")
  " Highlight current line
  set cursorline

  " Get rid of toolbar in MacVim
  set guioptions=c guioptions-=TeLr

  " Set font
  set guifont=Source\ Code\ Pro:h14
end

" Set commandbar height
set cmdheight=2

" Make tab completion act more like bash
set wildmenu
set wildmode=list:longest

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set expandtab
set colorcolumn=80

" Make omnicomplete a bit easier
imap <Leader>o <C-x><C-o>

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Status Line
function! GetGitBranchName()
  let branchName = ""

  if exists("g:loaded_fugitive")
    let branchName = "[" . fugitive#head() . "]"
  endif

  return branchName
endfunction

set statusline=%f%m%r%h%w\ %y\ %{GetGitBranchName()}\ %=[%c,%l/%L]\ [%p%%]
set laststatus=2

" No swap files
set nobackup
set nowritebackup
set noswapfile

" Disable error bells
set noerrorbells
set visualbell
set t_vb=


" COLORSCHEMES
" ------------------------

" Dracula settings
if !has("gui_running")
  let g:dracula_italic = 0
  let g:dracula_colorterm = 0
end

colorscheme dracula

" Gruvbox settings
" set background=dark
" colorscheme gruvbox

" Toggle background color (only for certain colorschemes)
" nmap <leader>d :let &background = ( &background == 'dark'? 'light' : 'dark' )<CR>


" PLUGINS
" ------------------------

" Set Github Domains
let g:fugitive_github_domains = ['https://example.com']

" Add JSX support for js files
let g:jsx_ext_required = 0

" Allow CtrlP to ignore certain directories and include dotfiles
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|tmp'
let g:ctrlp_show_hidden = 1

" Setup Prettier with ALE
let g:ale_fixers = {
      \ 'css': ['prettier'],
      \ 'scss': ['prettier'],
      \ 'javascript': ['prettier'],
      \ 'json': ['prettier']
      \ }
let g:ale_javascript_prettier_use_local_config = 1
let g:ale_fix_on_save = 1

" Jump between errors with ALE
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" Allow Emmet to recognize JSX
let g:user_emmet_settings = {
      \ 'javascript.jsx': {
      \   'extends': 'jsx',
      \ },
      \ }

" Airline settings
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'short_path'
